package models;

import java.lang.Long;
import java.util.*;

import javax.persistence.*;

import org.codehaus.jackson.JsonNode;

import play.Logger;
import play.db.ebean.*;
import play.data.format.*;
import play.data.validation.*;

import com.avaje.ebean.*;
import com.avaje.ebean.annotation.EnumValue;

import controllers.Utils;
import play.libs.F.*;
import play.libs.WS;


@Entity
@Table(name = "file", uniqueConstraints = { @UniqueConstraint(columnNames = {
		"owner", "path" }) })
public class File extends Model {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1766439519493690841L;

	enum Filetype {
		@EnumValue("F")
		FILE, 
		@EnumValue("D")
		DIR
		};

	/**Unique random 128bit long id generated by the DB*/
	@Id
	UUID uuid;

	@Column(nullable = false)
	@Constraints.Required
	String path;
	//@Constraints.Required
	//String owner;
	
	//I changed the type to User so it reflects the DB relations --Beshr
	@Column(nullable = false)
	@Constraints.Required
  @ManyToOne
  User owner;
	
	@Column(nullable = false)
	@Constraints.Required
	Filetype type;
	
	long refID; // probably should be some other type

	public static Finder<Long,File> find = new Finder<Long,File>(Long.class, File.class); 

	public File(User user, String path, Filetype type) {
		//UUID = 1.0; // should be autogenerated by the system? //YES :)
		this.owner = user;
		this.path= path;
		this.type = type;
	}


}
