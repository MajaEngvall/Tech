package models;

import java.lang.Long;
import java.util.*;

import javax.persistence.*;

import org.codehaus.jackson.JsonNode;

import play.Logger;
import play.db.ebean.*;
import play.data.format.*;
import play.data.validation.*;

import com.avaje.ebean.*;
import com.avaje.ebean.annotation.EnumValue;

import controllers.Utils;
import play.libs.F.*;
import play.libs.WS;


@Entity
@Table(name = "vfiles", uniqueConstraints = { 
		@UniqueConstraint(columnNames = {"owner_id", "path" }) 
		})
public class Vfile extends Model {

	public Vfile() {
		super();
		// TODO Auto-generated constructor stub
	}

	/**
	 * 
	 */
	private static final long serialVersionUID = 1766439519493690841L;

	public static enum Filetype {
		@EnumValue("F")
		FILE, 
		@EnumValue("D")
		DIR
		};

	/**Unique random 128bit long id generated by the DB*/
	@Id
	public UUID uuid;

	@Column(nullable = false)
	@Constraints.Required
	String path;
	
	@Column(name = "owner_id", nullable = false)
	@Constraints.Required
	@ManyToOne
	User owner;
	
	@Column(nullable = false)
	@Constraints.Required
	Filetype type;

	//@Column(nullable = false)
	//@Constraints.Required
	@ManyToOne
	Stream linkedStream;

	public static Finder<UUID,Vfile> find = new Finder<UUID,Vfile>(UUID.class, Vfile.class); 

	public Vfile(User user, String path, Filetype type) {
		//UUID = 1.0; // should be autogenerated by the system? //YES :)
		this.owner = user;
		this.path= path;
		this.type = type;
	}
	
	public static Vfile create(Vfile file) {
		if (file.owner != null) {
			file.save();
			return file;
		}
		Logger.error("Could not create file because owner is null: " + file.path);
		return null;
	}
	
	public Filetype getType() {
		return type;
	}
	
	public void setLink(Stream linkedStream) {
		this.linkedStream = linkedStream;
		if(uuid != null) {
			this.update();
		}
	}
	public Stream getLink() {
		return linkedStream;
	}

}
